/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


#define  L_QWERTY       0
#define  L_SYMBOLS      1
#define  L_NAVI         2
#define  L_SWITCH       3
#define  L_NUMBERS      4
#define  L_NUMPAD       5
#define  L_ADJUST       6

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5

#define DITTO    LG(LA(LS(V)))
#define TO_PASTE LG(LA(LS(C)))

#define F_ZONE_1 LC(LA(LG(1)))
#define F_ZONE_2 LC(LA(LG(2)))

#define COL_ADJ  L_ADJUST SEMI

#define SYSPROP  LG(PAUSE_BREAK)

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp  TAB      &kp  Q        &kp  W        &kp  E        &kp  R        &kp  T                                                                          &kp  Y        &kp  U        &kp  I        &kp  O        &kp  P         &kp  EQUAL
&kp  LSHIFT   &kp  A        &kp  S        &kp  D        &kp  F        &kp  G                                                                          &kp  H        &kp  J        &kp  K        &kp  L        &lt  COL_ADJ   &kp  SINGLE_QUOTE  
&kp  LCTRL    &kp  Z        &kp  X        &kp  C        &kp  V        &kp  B        &kp  ESC                                            &caps_word    &kp  N        &kp  M        &kp  COMMA    &kp  DOT      &kp  SLASH     &kp  BACKSLASH
                                                        &kp  LGUI     &kp  LALT     &sk  SPACE     &mo  L_NAVI           &mo  L_SYMBOLS &kp  BSPC     &kp  RALT     &kp  RGUI
                        >;
                };

                symbols_layer {
                        bindings = <
&trans   &kp  EXCL     &kp  AT       &kp  LBKT     &kp  RBKT     &kp  PIPE                                                                &kp  PLUS     &kp  AMPS     &kp  ASTRK    &none         &none         &none
&trans   &kp  HASH     &kp  DOLLAR   &kp  LPAR     &kp  RPAR     &kp  GRAVE                                                               &kp  MINUS    &sk  RCTRL    &sk  RSHIFT   &sk  RALT     &sk  RGUI     &none
&trans   &kp  PERCENT  &kp  CARET    &kp  LBRC     &kp  RBRC     &kp  TILDE    &trans                                            &trans   &kp  EQUAL    &none         &kp  LT       &kp  GT       &none         &none
                                                   &trans        &trans        &trans    &mo  L_SWITCH                  &trans   &trans   &trans        &trans
                        >;
                };

                navigation_layer {
                        bindings = <
&trans   &sk  LGUI     &sk  LALT     &sk  LSHIFT   &sk  LCTRL    &kp  LC(T)                                                      &kp  HOME     &kp  LC(LEFT)  &kp  UP        &kp  LC(RIGHT)  &kp  PG_UP      &kp  INS
&trans   &kp  LC(A)    &kp  DELETE   &kp  ESC      &kp  ENTER    &kp  DITTO                                                      &kp  END      &kp  LEFT      &kp  DOWN      &kp  RIGHT      &kp  PG_DN      &kp  LC(KP_PLUS)
&trans   &kp  LC(Z)    &kp  LC(X)    &kp  LC(C)    &kp  LC(V)    &kp  TO_PASTE &trans                                   &trans   &none         &tog L_NUMPAD  &kp  LC(DOWN)  &kp  GT         &kp  LC(KP_N0)  &kp  LC(KP_MINUS)
                                                   &trans        &trans        &trans    &trans         &mo  L_SWITCH   &tog L_NUMBERS  &trans        &trans
                        >;
                };

                switch_layer {
                        bindings = <
&trans   &kp  F1       &kp  F2       &kp  F3       &kp  F4       &kp  F5                                                         &kp F6        &kp F7        &kp F8        &kp F9         &kp F10       &kp  F11
&trans   &none         &none         &none         &none         &none                                                           &none         &none         &none         &none          &none         &kp  F12
&trans   &kp  PSCRN    &kp  SLCK     &kp  SYSPROP  &none         &none         &trans                                   &trans   &kp F_ZONE_1  &kp F_ZONE_2  &kp  K_APP    &none          &none         &none
                                                   &trans        &trans        &trans    &trans                &trans   &trans   &trans        &trans
                        >;
                };

                numbers_layer {
                        bindings = <
&trans   &kp  EXCL     &kp  AT       &kp  HASH     &kp  DOLLAR   &kp  PERCENT                                                    &kp  CARET    &kp  AMPS     &kp  ASTRK    &kp  LPAR      &kp  RPAR     &kp  UNDER
&trans   &kp  N1       &kp  N2       &kp  N3       &kp  N4       &kp  N5                                                         &kp  N6       &kp  N7       &kp  N8       &kp  N9        &kp  N0       &kp  MINUS
&trans   &none         &none         &none         &none         &none         &trans                                   &trans   &kp  EQUAL    &kp  PLUS     &kp  COMMA    &kp  DOT       &kp  SLASH    &kp  ASTRK
                                                   &trans        &trans        &trans    &tog L_NUMBERS        &trans   &trans   &trans        &trans
                        >;
                };

                numpad_layer {
                        bindings = <
&trans   &none         &kp  F2       &kp  ESC      &kp  F4       &none                                                           &kp  KP_PLUS    &kp  KP_N7   &kp  KP_N8   &kp  KP_N9      &kp  KP_MINUS     &none
&trans   &kp  LPAR     &kp  DEL      &kp  UP       &kp  ENT      &kp  RPAR                                                       &kp  KP_MINUS   &kp  KP_N4   &kp  KP_N5   &kp  KP_N8      &kp  KP_ASTERISK  &kp  ENT
&trans   &kp  LT       &kp  LEFT     &kp  DOWN     &kp  RIGHT    &kp GT        &trans                                   &trans   &kp  EQUAL      &kp  KP_N1   &kp  KP_N2   &kp  KP_N7      &kp  KP_SLASH     &kp  KP_DOT
                                                   &trans        &trans        &trans    &tog L_NUMPAD         &trans   &trans   &kp  KP_N0      &kp  KP_DOT
                        >;
                };

                adjust_layer {
                        bindings = <
&none         &none         &none         &none         &kp LS(LA(N5))   &kp LS(LA(N4))                                                               &out  OUT_USB     &none              &none            &none          &none           &none
&sys_reset    &bt  BT_SEL 0 &bt  BT_SEL 1 &bt  BT_SEL 2 &kp LS(LA(N9))   &kp LS(LA(N8))                                                               &out  OUT_BLE     &none              &none            &none          &none           &sys_reset
&none         &none         &none         &none         &kp LS(LA(N7))   &kp LS(LA(N6))          &bt BT_CLR                          &none            &none             &none              &none            &none          ko&none           &bootloader
                                                        &none            &none                   &none        &none    &trans        &trans           &trans            &trans
                        >;
                };
        };
};